x<- list(2,"a",'"b",TRUE)
x<- list(2,"a",'"b",TRUE)
x <- list(2,"a",'"b",TRUE)
\
q
getwd()
exit
quit
quit
exit
q
add2(3,5)
add2 <- function(x,y) {
x + y
}
add2 (3,5)
above <- function(x,n) {
use < <= x > n
x[use]
}
x <- 1:30
above(x,15)
above <- function(x,n) {
use < <= x > n
x[use]
}
above <- function(x,n) {
use < <= x > n
x[use]
}
above
above <- function(x,n) {
use < <= x > n
x[use]
}
above
above <- function(x,n) {
use <- x > n
x[use]
}
above(x,15)
above <- function(x,n=10) {
use <- x > n
x[use]
}
above(x)
above(x,12)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
dir()
cd CourseraMT
cd (CourseraMT)
cd "CourseraMT"
columnmean(airquality)
columnmean <- function(y,removeNA = TRUE {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i],na.rm = removeNA)
}
means
}
columnmean <- function(y,removeNA = TRUE {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i],na.rm = removeNA)
}
means
}
columnmean <- function(y,removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[,i],na.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality, FALSE)
mydata <- rnorm(100)
mydata
cube <- function(x,n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {}
if(x > 5) { x <- 0 }
x <- 10
if (x > 5) {
x <- 0
}
x <- 10
if (x > 5) {
x <- 0
}
x <- 10
if (x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x
z
y
arg(g)
args(g)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
args(f)
args(g)
z <- 10
z
f(3)
z
y
f(4)
f(5)
g
z
f(3)
f <- function(x) {
g <- function(y) {
y + z
}
f <- function(x) {
g <- function(y) {
y + z
}
)
f <- function(x) {
g <- function(y) {
y + z
}
}
f <- function(x) {
g <- function(y) {
y + z
}
quit
}
z
y
z
x
f
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z
args(f)
function(3)
f(3)
x
g <- function(y) {
y + z
}
args(g)
marcela <- function(x) {
z < 4
x =g(x)
}
z <- 10
g(3)
marcela(3)
args(marcela)
args(g)
args(g)
View(g)
View(marcela)
View(f)
function(x) {
quit
library(datasets)
data(iris)
?iris
? iris
x <- iris
x
names x
names(iris)
head(x)
str(apply)
names(x)
f <-  gl(iris.setosa)
a <- (iris.setosa)
a <- (iris[setosa])
a <- (iris["setosa"])
names(iris)
a <- (iris["Species"])
a
f <-  gl(iris[Species])
f <-  gl(iris["Species"])
f <-  gl(iris."Species")
str(gl)
gl
str(iris)
s <- split(iris,iris$Species)
s
str(s)
lapply(s,function(x) colMeans(x,c["virginica"]))
lapply(s,function(x) colMeans(x,c["virginica"]))
s
s
lapply(s,function(x) colMeans(x,c("virginica"]))
lapply(s,function(x) colMeans(x,c("virginica")))
$virignica
$virginica
virginica
lapply(s,function(x) colMeans(x,c("virginica")))
s
lapply(s,function(x) colMeans(x,c("virginica")))
names(s)
lapply(s,function(x) colMeans(x,c("sepal.length")))
lapply(s,function(x) colMeans(x,c["sepal.length")])
lapply(s,function(x) colMeans(x,c["sepal.length"])
)
str(lapply)
lapply(s,me
an["sepal.length"])
library(datasets)
head(airquality)
s <- split(airquality,airquality$Month)
s
lapply(s,function(x) colMeans(x,c["Ozone","Solar.R","Wind"]))
lapply(s,function(x) colMeans(x,c(["Ozone","Solar.R","Wind")])
lapply(s,function(x) colMeans(x,c(["Ozone","Solar.R","Wind")])
str(lmeans)
str(ColMeans)
lapply(s,function(x) colMeans(x)
)
lapply(s,function(x) colMeans(x))
lapply(s,function(x) colMeans(x,c["Solar.R"]))
lapply(s,function(x) colMeans(x,c["Wind"]))
lapply(s,function(x) colMeans(x,c["Temp"]))
lapply(s,function(x) colMeans(x))
library(datasets)
head(iris)
s <- split(iris,iris$Species)
s
lapply(s,function(x) colMeans(x))
sair <- split(airquality,airquality$Month)
sair
lapply(sair,function(x) colMeans(x))
lapply(sair,function(x) colMeans(x,"Ozone"))
s
lapply(sair,function(x) colMeans(x,c("Ozone","Solar.R","Wind")])
lapply(sair,function(x) colMeans(x,c("Ozone","Solar.R","Wind"))
)
lapply(sair,function(x) colMeans(x,c("Ozone","Solar.R","Wind")))
lapply(sair,function(x) colMeans(x[,c("Ozone","Solar.R","Wind")])
)
lapply(sair,function(x) colMeans(x[,c("Ozone")])
)
lapply(sair,function(x) colMeans(x[,c("Ozone")]))
lapply(sair,function(x) mean(x[,c("Ozone")]))
lapply(sair,function(x) mean(x[,c("Solar.R")]))
lapply(s,function(x) mean(x[,c("Solar.R")]))
s
lapply(s,function(x) mean(x[,c("Sepal.Length")]))
sapply(s,function(x) mean(x[,c("Sepal.Length")]))
lapply(s,function(x) mean(x[,c("Sepal.Length")]),na.rm=TRUE)
sapply(s,function(x) mean(x[,c("Sepal.Length")]),na.rm=TRUE)
sapply(s,function(x) mean(x[,c("Sepal.Length")]))
lapply(s,function(x) mean(x[,c("Sepal.Length")]))
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
apply(iris,2,mean)
apply(iris[,1:4])
rowMEans(iris[,1:4])
rowMeans(iris[,1:4])
iris[,1:4]
iris[1:4,]
iris[,1:3]
rowMeans(iris[,1:4]
)
colMeans(iris[1:4,]
)
rowMeans(iris[,1:4]
)
colMeans(iris[1:4,])
iris([1,4,])
iris([1,4],)
iris[1,4]
iris[,1:4]
iris[1:4,]
iris[1:4,1:4]
colMeans(iris[1:4,1:4])
colMeans(iris[1:4,])
rowMeans(iris[,1:4])
iris[,1:4]
rowMeans(iris[,1:4])
apply(iris[,1:4],1,mean)
rowMeans(iris[,1:4])
rowMeans(iris[,1:4])
iris[,1:4]
apply(iris,2,mean)
apply(iris[.1:4],2,mean)
apply(iris[,1:4],2,mean)
x <- apply(iris[,1:4],2,mean)
length(x)
iris[,1:4]
ColMeans(iris[,1:4])
colMeans(iris[,1:4])
colMeans(iris[,1:1])
mean(iris[,1:1])
iris[,5:5])
iris[,5:5]
mean(iris[101:150,1:1])
debug(ls)
ls
ls()
quit
exit
quit
stop
end
ls
ls()
ls()
ls()
ls()
Q
library(datasets)
data(mtcars)
names(mtcars)
n
datasets(mtcars)
library(datasets)
data(mtcars)
names(mtcars)
head(mtcars)
with(mtcars,tapply(mpg,cyl,mean))
split(mtcars,mtcars$cyl)
s <- split(mtcars,mtcars$cyl)
with(mtcars,tapply(mpg,cyl,mean))
lapply(s,function(x) mean(x[,c("mpg")]))
with(mtcars,tapply(mpg,cyl,mean))
diff <-  with(mtcars,tapply(mpg,cyl,mean))
length(diff)
c4 <- diff[1]
c8 <- fiff[3]
c8 <- diff[3]
c4 - c8
names(mtcars)
diff <-  with(mtcars,tapply(hp,cyl,mean))
diff
diff[4] - diff[8]
diff[1] - diff[3]
diff[3] - diff[1]
makeVector
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
makeVector(5)
str(makeVector)
x
m
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
str(cachemean)
function(x)
)
cachemean(x)
m
makeVector(c(5,9,15,23))
cachemean()
makeVector()
cachemean()
a <- makeVector(c(5,1,3))
a
a$get()
a$set(c(7,4,1,2))
a$get()
a <- makeVector(c(1,2,3,4))
a
a()
a$setmean(10)
a$getmean()
list(makeVector)
a- makeVector(c(1,2,3,4))
a<- makeVector(c(1,2,3,4))
a
cachemean (a)
cachemean (b)
a <-(1:45)
b <- makeVector(a)
cacheMean(b)
cachemean (b)
cachemean (b)
b <- makeVector(a)
a <-(1:45)
getwd
getwd()
setwd("C:/Users/asus1/Documents/CourseraMT/datasciencecoursera/ProgrammingAssignment2")
dir()
solve
solve()
a <- data.frame(c(1:4))
a
a <- data.frame(c(1:4),2,2)
a
a <- matrix(nrow=2,ncol=2)
a
a <- matrix(1:4,nrow=2,ncol=2)
a
solve(a)
inva <- solve(a)
inva
inva * a
aid <- matrix(c(1,0,1,0),nrow=2,ncol=2)
aid
aid <- matrix(c(1,1,0,0),nrow=2,ncol=2)
aid
aid <- matrix(c(1,0,10),nrow=2,ncol=2)
aid <- matrix(c(1,0,1,0),nrow=2,ncol=2)
aid
aid <- matrix(c(1,0,0,1),nrow=2,ncol=2)
aid
inva * aid
a
inva
inva * a
inva * aid
aid
a * aid
aid * inv
aid * inva
inva * aid
solve(a)
